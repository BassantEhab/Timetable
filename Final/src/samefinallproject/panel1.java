package samefinallproject;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author egypt2
 */
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection ;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;

public class panel1 extends javax.swing.JPanel {

    /**
     * Creates new form panel1
     */
    public panel1() {
        initComponents();
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.anchor = GridBagConstraints.NORTH ;
         if(this.getComponentCount() > 2){
            for(int i = 2; this.getComponentCount() > 2;){
                this.remove(i);
            }
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<String>();
        jComboBox2 = new javax.swing.JComboBox<String>();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));
        setAutoscrolls(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(700, 596));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setMaximumSize(new java.awt.Dimension(628, 23));
        jPanel2.setMinimumSize(new java.awt.Dimension(628, 23));
        jPanel2.setRequestFocusEnabled(false);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(205, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));
        jPanel6.setName(""); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Enter Course ID");
        jLabel2.setMaximumSize(new java.awt.Dimension(191, 22));
        jLabel2.setMinimumSize(new java.awt.Dimension(191, 22));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Enter Course name");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setText("Enter number of lectures");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setText("Enter number of labs");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4" }));
        jComboBox1.setSelectedIndex(-1);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4" }));
        jComboBox2.setSelectedIndex(-1);
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(37, 37, 37)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                .addGap(63, 63, 63)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(313, 313, 313))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(9, 9, 9))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(571, 571, 571))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(174, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        // Check if the lectures panel was added
        // And remove it to build new one
        if(this.getComponentCount() > 2){
            // Remove old component if found
            for(int i = 2; this.getComponentCount() > 2;){
                this.remove(i);
        
            }
            getParent().validate();
        }
        
        ArrayList<Classroom> classrooms=new ArrayList();
        ArrayList<Laboratoty> laboratorys = new ArrayList() ;
        ArrayList<Teacher> teachers =new ArrayList();
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://localhost:1433;databaseName=TimeTable;integratedSecurity=true";
            Connection con = DriverManager.getConnection(url);
            if(con.isValid(100))
            {

                String sql = "select * from Teacher";
                PreparedStatement pstw = con.prepareStatement(sql);
                ResultSet rs = pstw.executeQuery();
                while(rs.next())
                {
                    Teacher t = new Teacher() ;
                    t.setID(rs.getString(1));
                    t.setPhone(rs.getString(2));
                    t.setEmail(rs.getNString(3));
                    teachers.add(t);
                }
                String sql2 = "select * from Class_Room";
                PreparedStatement pst = con.prepareStatement(sql2);
                ResultSet rss = pst.executeQuery();
                while(rss.next())
                {
                    Classroom c = new Classroom();
                    c.setName(rss.getString(2));
                    classrooms.add(c) ;
                }
                String sql3 = "select * from Laboratory";
                PreparedStatement ps = con.prepareStatement(sql3);
                ResultSet rsss = ps.executeQuery();
                while(rsss.next())
                {
                    Laboratoty l = new Laboratoty();
                    l.setName(rsss.getString(2));
                    laboratorys.add(l) ;
                }

            }

            con.close();
        }
        catch(ClassNotFoundException e){

            JOptionPane.showMessageDialog(null, "NOOOOOOOO");
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, "OHHHHH");
        }
        // Get and parse the number of lectures from ComboBox
        int num = Integer.parseInt(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()));        
        
        setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
        
        for (int i = 1; i <= num; i++) {
            // New panel to hold the JLabels and JTextField
            JPanel lecturesPanel = new JPanel(new GridBagLayout());
            
            // To be Horziantal Alignment
            GridBagConstraints gbc = new GridBagConstraints();
            //gbc.anchor = GridBagConstraints.NORTH;
            
            lecturesPanel.setBorder(BorderFactory.createTitledBorder("Lecture " + i));
            
            JPanel teacherPanel = new JPanel(new FlowLayout());
            JLabel teacherID = new JLabel("Teacher ID");
            JComboBox teacherIDS = new JComboBox() ;
            teacherIDS.setSelectedItem(" ");
            teacherIDS.setSelectedIndex(-1);
            Iterator<Teacher> teacherIterator = teachers.iterator();
            while(teacherIterator.hasNext()){
                teacherIDS.addItem(teacherIterator.next().getID());
            }
            teacherPanel.add(teacherID);
            teacherPanel.add(teacherIDS);
            
            
            JPanel roomPanel = new JPanel(new FlowLayout());
            JLabel room = new JLabel("Room");
            JComboBox roomnameS = new JComboBox() ;
            roomnameS.setSelectedIndex(-1);
            Iterator<Classroom> classroomIterator = classrooms.iterator() ;
            while(classroomIterator.hasNext()){
                roomnameS.addItem(classroomIterator.next().getName());
            }
            
            roomPanel.add(room);
            roomPanel.add(roomnameS);
            
            JPanel numberOfHoursPanel = new JPanel(new FlowLayout());
            JLabel numberOfHours = new JLabel("Number of Hours");
            JTextField numberOfHoursTextField = new JTextField("          ");
            
            numberOfHoursPanel.add(numberOfHours);
            numberOfHoursPanel.add(numberOfHoursTextField);
            
            lecturesPanel.add(teacherPanel, gbc);
            lecturesPanel.add(roomPanel, gbc);
            lecturesPanel.add(numberOfHoursPanel, gbc);
            JButton AddButton = new JButton();
            AddButton.setText("Add");
            lecturesPanel.add(AddButton);
            
            this.add(lecturesPanel);
            this.add(lecturesPanel);
            AddButton.addActionListener((ActionEvent e) -> {
                String teacher = String.valueOf(teacherIDS.getSelectedItem()) ;
                String roomm = String.valueOf(roomnameS.getSelectedItem());
                String course = jTextField3.getText();
                Cell c = new Cell();
                c.setTeacherId(teacher);
                c.setCourseName(course);
                c.setRoomName(roomm);
                try{
                    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                    String url="jdbc:sqlserver://localhost:1433;databaseName=TimeTable;integratedSecurity=true";
                    Connection con = DriverManager.getConnection(url);
                    if(con.isValid(100))
                    {
                        String query = "insert into cell(teacher, room, course)values(?,?,?)" ;
                        PreparedStatement pst = con.prepareStatement(query) ;
                        pst.setString(1, teacher);
                        pst.setString(2,roomm);
                        pst.setString(3,course);
                        pst.executeUpdate() ;
                    }

                    con.close();
                }
                catch(ClassNotFoundException | SQLException a){

                    JOptionPane.showMessageDialog(null, a);
                }
                
            });

        }
        getParent().validate();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
                if(this.getComponentCount() > 2){
            for(int i = 2; this.getComponentCount() > 2;){
                this.remove(i);
            }
        }
         ArrayList<Classroom> classrooms=new ArrayList();
        ArrayList<Laboratoty> laboratorys = new ArrayList() ;
        ArrayList<Teacher> teachers =new ArrayList();
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://localhost:1433;databaseName = TimeTable;integratedSecurity=true";
            Connection con = DriverManager.getConnection(url);
            if(con.isValid(100))
            {

                String sql = "select * from Teacher";
                PreparedStatement pstw = con.prepareStatement(sql);
                ResultSet rs = pstw.executeQuery();
                while(rs.next())
                {
                    Teacher t = new Teacher() ;
                    t.setID(rs.getString(1));
                    t.setPhone(rs.getString(2));
                    t.setEmail(rs.getNString(3));
                    teachers.add(t);
                }
                String sql2 = "select * from Class_Room";
                PreparedStatement pst = con.prepareStatement(sql2);
                ResultSet rss = pst.executeQuery();
                while(rss.next())
                {
                    Classroom c = new Classroom();
                    c.setName(rss.getString(2));
                    classrooms.add(c) ;
                }
                String sql3 = "select * from Laboratory";
                PreparedStatement ps = con.prepareStatement(sql3);
                ResultSet rsss = ps.executeQuery();
                while(rsss.next())
                {
                    Laboratoty l = new Laboratoty();
                    l.setName(rsss.getString(2));
                    laboratorys.add(l) ;
                }

            }

            con.close();
        }
        catch(ClassNotFoundException e){

            JOptionPane.showMessageDialog(null, "NOOOOOOOO");
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, "OHHHHH");
        }
        int num = Integer.parseInt(jComboBox2.getItemAt(jComboBox2.getSelectedIndex()));        
        
        setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
        
        for (int i = 1; i <= num; i++) {
            JPanel labsPanel = new JPanel(new GridBagLayout());
            
            GridBagConstraints gbc = new GridBagConstraints();
            gbc.anchor = GridBagConstraints.NORTH;
            
            labsPanel.setBorder(BorderFactory.createTitledBorder("Lab " + i));
            
            JPanel teacherPanel = new JPanel(new FlowLayout());
            JLabel teacherID = new JLabel("Teacher ID");
            JComboBox teacherIDS = new JComboBox() ;
            teacherIDS.setSelectedItem(" ");
            teacherIDS.setSelectedIndex(-1);
            Iterator<Teacher> teacherIterator = teachers.iterator();
            while(teacherIterator.hasNext()){
                teacherIDS.addItem(teacherIterator.next().getID());
            }
            
            teacherPanel.add(teacherID);
            teacherPanel.add(teacherIDS);
            
            JPanel roomPanel = new JPanel(new FlowLayout());
            JLabel room = new JLabel("Room");
            JComboBox laboratoryS = new JComboBox() ;
            laboratoryS.setSelectedIndex(-1);
            Iterator<Laboratoty> LaboratotyIterator = laboratorys.iterator();
            while(LaboratotyIterator.hasNext()){
                laboratoryS.addItem(LaboratotyIterator.next().getName());
            }
            
            roomPanel.add(room);
            roomPanel.add(laboratoryS);
            
            JPanel numberOfHoursPanel = new JPanel(new FlowLayout());
            JLabel numberOfHours = new JLabel("Number of Hours");
            JTextField numberOfHoursTextField = new JTextField("           ");
            //numberOfHoursTextField.setAlignmentX(10);
            numberOfHoursTextField.setSize(10, 5);
            
            numberOfHoursPanel.add(numberOfHours);
            numberOfHoursPanel.add(numberOfHoursTextField);
            
            labsPanel.add(teacherPanel, gbc);
            labsPanel.add(roomPanel, gbc);
            labsPanel.add(numberOfHoursPanel, gbc);
            JButton AddButton = new JButton();
            AddButton.setText("Add");
            labsPanel.add(AddButton);
            
            this.add(labsPanel);
            AddButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    String teacher = String.valueOf(teacherIDS.getSelectedItem()) ;
                    String room = String.valueOf(laboratoryS.getSelectedItem()) ;
                    String course = jTextField3.getText();
                    Cell c = new Cell();
                    c.setTeacherId(teacher);
                    c.setCourseName(course);
                    c.setRoomName(room);
                    try{
                        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                        String url="jdbc:sqlserver://localhost:1433;databaseName=TimeTable;integratedSecurity=true";
                        Connection con = DriverManager.getConnection(url);
                        if(con.isValid(100))
                        {

                            String query = "insert into cell(teacher, room, course)values(?,?,?)" ;
                            PreparedStatement pst = con.prepareStatement(query) ;
                            pst.setString(1, teacher);
                            pst.setString(2,room);
                            pst.setString(3,course);
                            pst.executeUpdate() ;
                        }

                        con.close();
                    }
                    catch(ClassNotFoundException | SQLException a){

                        JOptionPane.showMessageDialog(null, a);
                    }
                    

                }
            });
        }
        getParent().validate();
        
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

         try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://localhost:1433;databaseName=TimeTable;integratedSecurity=true";
            Connection con = DriverManager.getConnection(url);
            if(con.isValid(100))
            {
            String query = "insert into Course(Course_ID, Course_Name)values(?,?)" ;
            PreparedStatement pst = con.prepareStatement(query) ;
            pst.setString(1, jTextField2.getText());
            pst.setString(2, jTextField3.getText());
          
            pst.executeUpdate() ;
            JOptionPane.showMessageDialog(null, "Course Added ^_^");
           
            
            }
            con.close();
             
        }
        catch(ClassNotFoundException a)
        {
            JOptionPane.showMessageDialog(null, "Nooooooooooo");
        }
        catch(Exception e){
            
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
